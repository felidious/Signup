{"version":3,"sources":["useForm.js","validateInfo.js","FormSignup.js","FormSuccess.js","Form.js","App.js","index.js"],"names":["useForm","callback","validate","useState","username","email","password","password2","values","setValues","errors","setErrors","isSubmitting","setIsSubmitting","useEffect","Object","keys","length","handleChange","e","target","name","value","handleSubmit","preventDefault","validateInfo","trim","test","FormSignup","submitForm","className","onSubmit","htmlFor","id","type","placeholder","onChange","href","FormSuccess","src","alt","Form","isSubmitted","setIsSubmitted","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.df3da0f0.chunk.js","sourcesContent":["import {useState,useEffect} from 'react'\n\nconst useForm = (callback,validate) =>{\n    const [values, setValues] = useState({\n        username:'',\n        email:'',\n        password:'',\n        password2:''\n    })\n    const [errors,setErrors] = useState({})\n    const [isSubmitting,setIsSubmitting]=useState(false)\n\n\n    const handleChange = e => {\n        const {name,value} = e.target\n        setValues({\n            ...values,\n            [name]:value\n        })\n    }\n\n    const handleSubmit = e =>{\n        e.preventDefault();\n\n        setErrors(validate(values));\n        setIsSubmitting(true)\n    }\n\n    useEffect(()=>{\n        if(Object.keys(errors).length === 0 && isSubmitting){\n            callback();\n        }\n    },[errors])\n\n    return {handleChange, values, handleSubmit,errors}\n};\nexport default useForm;","export default function validateInfo(values){\n    let errors ={}\n\n    // User name\n    if(!values.username.trim()){\n        errors.username =\"Username Required!!\"\n    }\n    // Email\n    if(!values.email){\n        errors.email =\"E-mail Required!!\"\n\n    }else if (!/\\S+@\\S+\\.\\S+/.test(values.email)){\n        errors.email=\"E-mail Address is Invalid\"\n    }\n    if (!values.password) {\n        errors.password = 'Password is required';\n      } else if (values.password.length < 6) {\n        errors.password = 'Password needs to be 6 characters or more';\n      }\n    \n      if (!values.password2) {\n        errors.password2 = 'Password is required';\n      } else if (values.password2 !== values.password) {\n        errors.password2 = 'Passwords do not match';\n      }\n      return errors;\n    }\n\n\n\n","import React from 'react'\nimport useForm from './useForm'\nimport validate from './validateInfo'\nimport './Form.css';\n\nconst FormSignup = ({submitForm}) => {\n    const {handleChange,values, handleSubmit,errors}= useForm(submitForm,validate);\n\n\n    return (\n        <div className = 'form-content-right'>\n            <form className='form' onSubmit={handleSubmit}>\n                <h1>Get started with us today !! Start your account by telling us more about yourself.</h1>\n                <div className=\"form-inputs\">\n                    <label htmlFor=\"username\"\n                     className=\"form-label\">\n                        Username\n                     </label>\n                    <input\n                    id = 'username'\n                     type=\"text\" \n                    name =\"username\"\n                     className=\"form-input\"\n                     placeholder = \"Enter your Name\"\n                     value={values.name}\n                     onChange={handleChange}\n\n                      />\n                      {errors.username && <p>{errors.username}</p>}\n                </div>\n                <div className=\"form-inputs\">\n                    <label htmlFor=\"email\"\n                     className=\"form-label\">\n                        E-mail\n                     </label>\n                    <input\n                    id = 'email'\n                     type=\"text\" \n                    name =\"email\"\n                     className=\"form-input\"\n                     placeholder = \"Enter your e-mail ID\"\n                     value = {values.email}\n                     onChange={handleChange} />\n                     {errors.email && <p>{errors.email}</p>}\n                </div>\n                <div className=\"form-inputs\">\n                    <label htmlFor=\"password\"\n                     className=\"form-label\">\n                        Password\n                     </label>\n                    <input\n                    id = 'password'\n                     type=\"password\" \n                    name =\"password\"\n                     className=\"form-input\"\n                     placeholder = \"Enter your password\" \n                     value={values.password}\n                     onChange={handleChange}\n                     />\n                     {errors.password && <p>{errors.password}</p>}\n                </div>\n                <div className=\"form-inputs\">\n                    <label htmlFor=\"password\"\n                     className=\"form-label\">\n                        Confirm Password\n                     </label>\n                    <input\n                    id = 'password2'\n                     type=\"password\" \n                    name =\"password2\"\n                     className=\"form-input\"\n                     placeholder = \"Confirm Password\" \n                     value={values.password2}\n                     onChange={handleChange}\n                     />\n                     {errors.password2 && <p>{errors.password2}</p>}\n                </div>\n                <button type = 'submit'\n                 className=\"form-input-btn\">\n                    Sign Up\n                </button>\n                <span className=\"form-input-login\">\n                    Already have an account? Login <a href=\"#\">here</a>\n                </span>\n            </form>\n\n        </div>\n    )\n}\n\nexport default FormSignup\n","import React from 'react';\nimport './Form.css';\n\nconst FormSuccess = () => {\n  return (\n    <div className='form-content-right'>\n      <h1 className='form-success'>We have received your request!</h1>\n      <img className='form-img-2' src='./img/img-3.svg' alt='success-image' />\n    </div>\n  );\n};\n\nexport default FormSuccess;"," import React, { useState } from 'react'\nimport FormSignup from './FormSignup'\nimport FormSuccess from './FormSuccess'\nimport './Form.css';\n\n \n const Form = () => {\n     const [isSubmitted, setIsSubmitted]=useState(false)\n\n    function submitForm(){\n        setIsSubmitted(true)\n    }\n\n     return (\n         <>\n        <div className=\"form-container\">\n            <span className=\"close-btn\"></span>\n            <div className=\"form-content-left\">\n                <img src=\"img/img-2.svg\" alt=\"SpaceShip\" className=\"form-img\" />\n            </div>\n            {!isSubmitted ? <FormSignup submitForm={submitForm} /> : <FormSuccess/>}\n        </div> \n             \n             \n\n         \n         </>\n     )\n }\n \n export default Form\n ","import React from 'react'\nimport './App.css';\nimport Form from './Form';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Form />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}